<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Combined Bouncing Ball with Corner Counter</title>
  <style>
    body {
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      margin: 0;
      background: #e0e0e0;
      font-family: Arial, sans-serif;
    }

    .container {
      display: flex;
      align-items: center;
      gap: 20px;
    }

    canvas {
      border: 2px solid black;
      background: #f0f0f0;
    }

    #counter {
      font-size: 22px;
      font-weight: bold;
      padding: 10px 15px;
      background: white;
      border: 1px solid #aaa;
      border-radius: 8px;
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
      white-space: nowrap;
    }
  </style>
</head>
<body>
  <div class="container">
    <canvas id="canvas" width="600" height="400"></canvas>
    <div id="counter">Corner Hits: 0</div>
  </div>

  <script>
    const canvas = document.getElementById('canvas');
    const ctx = canvas.getContext('2d');
    const counterDisplay = document.getElementById('counter');

    let ball = {
      x: 100,
      y: 100,
      radius: 15,
      dx: 3,
      dy: 2,
      color: 'blue'
    };

    let cornerHits = 0;
    const tolerance = 10;
    let recentlyHitCorner = false;

    function drawBall() {
      ctx.beginPath();
      ctx.arc(ball.x, ball.y, ball.radius, 0, Math.PI * 2);
      ctx.fillStyle = ball.color;
      ctx.fill();
      ctx.closePath();
    }

    function isCornerHit(x, y) {
      const corners = [
        { x: 0, y: 0 },
        { x: canvas.width, y: 0 },
        { x: 0, y: canvas.height },
        { x: canvas.width, y: canvas.height }
      ];

      return corners.some(corner =>
        Math.abs(x - corner.x) < tolerance &&
        Math.abs(y - corner.y) < tolerance
      );
    }

    function update() {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      drawBall();

      // Wall bounce logic
      if (ball.x + ball.radius > canvas.width || ball.x - ball.radius < 0) {
        ball.dx = -ball.dx;
      }
      if (ball.y + ball.radius > canvas.height || ball.y - ball.radius < 0) {
        ball.dy = -ball.dy;
      }

      // Move the ball
      ball.x += ball.dx;
      ball.y += ball.dy;

      // Detect corner hit
      if (isCornerHit(ball.x, ball.y)) {
        if (!recentlyHitCorner) {
          cornerHits++;
          counterDisplay.textContent = `Corner Hits: ${cornerHits}`;
          recentlyHitCorner = true;
        }
      } else {
        recentlyHitCorner = false;
      }

      requestAnimationFrame(update);
    }

    update();
  </script>
</body>
</html>
```
